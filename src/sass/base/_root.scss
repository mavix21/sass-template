@use "../abstracts/" as *;
@use "sass:math";
@use "sass:map";

:root {
  // colors
  @each $color, $shade-map in $active-theme {
    @each $shade, $value in $shade-map {
      --#{$color}-#{$shade}: #{$value};
    }
  }

  @media (prefers-color-scheme: dark) {
    @each $color, $shade-map in $dark {
      @each $shade, $value in $shade-map {
        --#{$color}-#{$shade}: #{$value};
      }
    }
  }

  // sizes
  @each $size, $value in $sizes {
    --size-#{$size}: #{$value};
  }

  // font sizes
  @each $screen-size, $sizes in $font-sizes {
    @if $screen-size == "small" {
      @each $size, $value in $sizes {
        --fs-#{$size}: #{$value};
      }
    } @else {
      @include mq($screen-size) {
        @each $size, $value in $sizes {
          --fs-#{$size}: #{$value};
        }
      }
    }
  }

  --radius: 0.42em;
  --border-width: 0.2em;
  --offset-y: 0.2em;

  --ring-offset-color: var(--bg-primary);
  --ring-offset-width: 0.25em;
  --ring-offset-shadow: 0px 0px 0px var(--ring-offset-width)
    var(--ring-offset-color);

  --ring-color: var(--border-color);
  --ring-shadow: 0px 0px 0px
    calc(var(--border-width) + var(--ring-offset-width)) var(--ring-color);
}

body[data-theme="light"] {
  @each $color, $shade-map in $light {
    @each $shade, $value in $shade-map {
      --#{$color}-#{$shade}: #{$value};
    }
  }
}

body[data-theme="dark"] {
  @each $color, $shade-map in $dark {
    @each $shade, $value in $shade-map {
      --#{$color}-#{$shade}: #{$value};
    }
  }
}
